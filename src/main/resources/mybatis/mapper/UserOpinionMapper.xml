<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zerody.user.mapper.UserOpinionMapper" >
  <resultMap id="BaseResultMap" type="com.zerody.user.domain.UserOpinion" >
    <id column="Id" property="id" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="video" property="video" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="state" property="state" javaType="INTEGER"/>
    <result column="source" property="source" javaType="INTEGER"/>
  </resultMap>

  <resultMap id="BaseResultMapVo" type="com.zerody.user.vo.UserOpinionPageVo" extends="BaseResultMap">
    <result column="reply_content" property="replyContent" jdbcType="VARCHAR"/>
    <result column="type_name" property="typeName" jdbcType="VARCHAR"/>
    <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
    <result column="depart_name" property="departName" jdbcType="VARCHAR"/>
    <association property="seeUserName" column="{opinionId = id}" select="getSeeUserNameByOpinionId"/>
    <association property="assistantUserName" column="{opinionId = id}" select="getSeeUserNameByOpinionId"/>
  </resultMap>

  <resultMap id="BaseResultMapPageVo" type="com.zerody.user.vo.UserOpinionPageVo" extends="BaseResultMapVo">
    <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
    <result column="depart_name" property="departName" jdbcType="VARCHAR"/>
  </resultMap>

  <resultMap id="BaseResultInfoMapVo" type="com.zerody.user.vo.UserOpinionDetailVo" extends="BaseResultMapPageVo">

  </resultMap>

  <select id="queryUserOpinionUser" resultMap="BaseResultMapVo">
    select o.*,uop.name as 'type_name',sci.company_name, sdi.depart_name,
    (SELECT content from user_reply r where r.opinion_id = o.id ORDER BY r.create_time desc limit 1 ) as reply_content
    from user_opinion o
    LEFT JOIN user_opinion_type uop on o.type_id = uop.id
    LEFT JOIN sys_staff_info ssi ON o.user_id=ssi.user_id
    LEFT JOIN sys_company_info sci ON ssi.comp_id=sci.id
    LEFT JOIN union_staff_depart usd ON usd.staff_id = ssi.id
    LEFT JOIN sys_department_info sdi ON usd.department_id = sdi.id
    where o.user_id = #{query.userId} and o.deleted = 1
    <if test="query.typeId neq null and query.typeId neq ''">
      and o.type_id = #{query.typeId}
    </if>
    <if test="query.state neq null">
      and o.state = #{query.state}
    </if>
    <if test="query.begin neq null ">
      and o.create_time &gt;=  #{query.begin}
    </if>
    <if test="query.end neq null ">
      and o.create_time &lt; #{query.end}
    </if>
    <if test="query.source neq null">
      and o.source = #{query.source}
    </if>
    order by o.create_time desc
  </select>

  <select id="getOpinionDetail" resultMap="BaseResultInfoMapVo">
    select uo.*,uop.name as 'type_name',sci.company_name, sdi.depart_name
    from user_opinion uo
    LEFT JOIN user_opinion_type uop on uo.type_id = uop.id
    LEFT JOIN sys_staff_info ssi ON uo.user_id=ssi.user_id
    LEFT JOIN sys_company_info sci ON ssi.comp_id=sci.id
    LEFT JOIN union_staff_depart usd ON usd.staff_id = ssi.id
    LEFT JOIN sys_department_info sdi ON usd.department_id = sdi.id
    where uo.deleted = 1 and uo.id = #{id}
  </select>

  <select id="queryUserOpinionPage" resultMap="BaseResultMapPageVo" >
    select uo.*,sci.company_name, sdi.depart_name,uop.name as 'type_name',
    (SELECT content from user_reply r where r.opinion_id = uo.id ORDER BY r.create_time desc limit 1 ) as reply_content
    from user_opinion uo
    LEFT JOIN user_opinion_type uop on uo.type_id = uop.id
    LEFT JOIN user_opinion_ref uor on uor.opinion_id = uo.id
    LEFT JOIN sys_staff_info ssi ON uo.user_id=ssi.user_id
    LEFT JOIN sys_company_info sci ON ssi.comp_id=sci.id
    LEFT JOIN union_staff_depart usd ON usd.staff_id = ssi.id
    LEFT JOIN sys_department_info sdi ON usd.department_id = sdi.id
    <where>
      uo.deleted = 1
      <if test="query.userId neq null and query.userId neq ''">
        and uor.user_id = #{query.userId}
      </if>
      <if test="query.replyType neq null and query.replyType neq ''">
        and uor.reply_type = #{query.replyType}
      </if>
      <if test="query.searchName neq null and query.searchName neq ''">
        and uo.user_name like concat('%',#{query.searchName},'%')
      </if>
      <if test="query.typeId neq null and query.typeId neq ''">
        and uo.type_id = #{query.typeId}
      </if>
      <if test="query.source neq null">
        and uo.source = #{query.source}
      </if>
      <if test="query.state neq null">
        and uo.state = #{query.state}
      </if>
      <if test="query.begin neq null ">
        and uo.create_time &gt;=  #{query.begin}
      </if>
      <if test="query.end neq null ">
        and uo.create_time &lt; #{query.end}
      </if>
    </where>
    order by uo.create_time desc
  </select>

  <select id="getOpinionReplyTotal" resultType="integer">
    select count(1) from user_opinion uo
    LEFT JOIN user_opinion_ref uor on uor.opinion_id = uo.id
    <where>
    uo.deleted = 1
    <if test="query.userId neq null and query.userId neq ''">
      and uor.user_id = #{query.userId}
    </if>
    <if test="query.searchName neq null and query.searchName neq ''">
      and uo.user_name like concat('%',#{query.searchName},'%')
    </if>
    <if test="query.typeId neq null and query.typeId neq ''">
      and uo.type_id = #{query.typeId}
    </if>
    <if test="query.source neq null ">
      and uo.source = #{query.source}
    </if>
    <if test="query.replyType neq null ">
      and uor.reply_type = #{query.replyType}
    </if>
    <if test="query.state neq null">
      and uo.state = #{query.state}
    </if>
    </where>
  </select>

  <select id="getSeeUserNameByOpinionId" resultType="string">
     select GROUP_CONCAT(IFNULL(ui.user_name,ceo.user_name)) from user_opinion_ref  uor
     left join sys_user_info ui on uor.user_id = ui.id
	 left join ceo_user_info ceo on ceo.id = uor.user_id
     where uor.opinion_id = #{opinionId} and uor.reply_type = 1
  </select>
</mapper>