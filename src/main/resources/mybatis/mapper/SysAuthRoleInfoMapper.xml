<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zerody.user.mapper.SysAuthRoleInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zerody.user.pojo.SysAuthRoleInfo" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="comp_id" property="compId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="role_type" property="roleType" jdbcType="VARCHAR" />
    <result column="role_tag" property="roleTag" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_id" property="createId" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="VARCHAR" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="role_validity_period" property="roleValidityPeriod" jdbcType="TIMESTAMP" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="role_validity_start" property="roleValidityStart" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zerody.user.pojo.SysAuthRoleInfo" extends="BaseResultMap" >
    <result column="role_desc" property="roleDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, comp_id, role_name, role_code, role_type, role_tag, status, create_id, create_user, 
    create_time, update_id, update_user, update_time, role_validity_period, parent_id, 
    role_validity_start
  </sql>
  <sql id="Blob_Column_List" >
    role_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_auth_role_info
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_auth_role_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.zerody.user.pojo.SysAuthRoleInfo" >
    insert into sys_auth_role_info (id, comp_id, role_name, 
      role_code, role_type, role_tag, 
      status, create_id, create_user, 
      create_time, update_id, update_user, 
      update_time, role_validity_period, parent_id, 
      role_validity_start, role_desc)
    values (#{id,jdbcType=VARCHAR}, #{compId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleCode,jdbcType=VARCHAR}, #{roleType,jdbcType=VARCHAR}, #{roleTag,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{roleValidityPeriod,jdbcType=TIMESTAMP}, #{parentId,jdbcType=VARCHAR}, 
      #{roleValidityStart,jdbcType=TIMESTAMP}, #{roleDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zerody.user.pojo.SysAuthRoleInfo" >
    insert into sys_auth_role_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="compId != null" >
        comp_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleCode != null" >
        role_code,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="roleTag != null" >
        role_tag,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="roleValidityPeriod != null" >
        role_validity_period,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="roleValidityStart != null" >
        role_validity_start,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="roleTag != null" >
        #{roleTag,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleValidityPeriod != null" >
        #{roleValidityPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="roleValidityStart != null" >
        #{roleValidityStart,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zerody.user.pojo.SysAuthRoleInfo" >
    update sys_auth_role_info
    <set >
      <if test="compId != null" >
        comp_id = #{compId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="roleTag != null" >
        role_tag = #{roleTag,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleValidityPeriod != null" >
        role_validity_period = #{roleValidityPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="roleValidityStart != null" >
        role_validity_start = #{roleValidityStart,jdbcType=TIMESTAMP},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zerody.user.pojo.SysAuthRoleInfo" >
    update sys_auth_role_info
    set comp_id = #{compId,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=VARCHAR},
      role_tag = #{roleTag,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_validity_period = #{roleValidityPeriod,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=VARCHAR},
      role_validity_start = #{roleValidityStart,jdbcType=TIMESTAMP},
      role_desc = #{roleDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zerody.user.pojo.SysAuthRoleInfo" >
    update sys_auth_role_info
    set comp_id = #{compId,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=VARCHAR},
      role_tag = #{roleTag,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_id = #{createId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      role_validity_period = #{roleValidityPeriod,jdbcType=TIMESTAMP},
      parent_id = #{parentId,jdbcType=VARCHAR},
      role_validity_start = #{roleValidityStart,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectRolesByStaffId" resultType="com.zerody.user.vo.SysAuthRoleInfoVo">
    SELECT
        role.id,
        role.comp_id,
        role.role_name,
        role.role_code,
        role.role_type,
        role.role_tag,
        role.role_validity_period,
        role.parent_id,
        role.role_validity_start
    from sys_auth_role_info role
    JOIN union_role_staff rs on rs.role_id = role.id
    <where>
        role.status = 1
    </where>
    <if test="staff != null and staff !=''">
      and rs.staff_id = #{staffId}
    </if>
  </select>
</mapper>